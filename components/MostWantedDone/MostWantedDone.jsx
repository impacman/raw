import { useState, useEffect } from 'react';
import { useMatchMedia } from '@/hooks/useMatchMedia';
import { MostWantedDoneCom, WrapTexts, Text, Back, Lines } from './styled';

import Bg from '../Bg';

const MostWantedDone = ({ data }) => {
  const { textsDesktop, textsMobile, link } = data;

  const [texts, setTexts] = useState(false);
  const [mobile, setMobile] = useState(false);

  const { isMinMobile } = useMatchMedia();

  useEffect(() => {
    if (isMinMobile) {
      setTexts(textsMobile);
      setMobile(true);
    } else {
      setTexts(textsDesktop);
      setMobile(false);
    }
  }, [isMinMobile]);

  return (
    <MostWantedDoneCom>
      {mobile && (
        <Lines width="375" height="812" viewBox="0 0 375 812" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g clipPath="url(#clip0_2654_13092)">
            <path
              d="M-541.066 1181.61C-564.952 1071.79 -588.837 961.976 -612.722 852.16C-627.418 784.595 -640.963 724.165 -678.764 665.569C-714.362 610.389 -758.209 561.621 -786.472 501.582C-789.198 495.791 -812.644 441.367 -808.224 436.44C-787.474 413.307 -761.018 390.84 -736.801 371.343C-708.055 348.202 -671.892 330.189 -640.225 311.068C-604.643 289.583 -569.79 265.361 -532.608 246.766C-479.868 220.389 -430.974 187.557 -372.485 174.835C-338.468 167.436 -301.764 181.067 -267.369 181.222C-237.344 181.357 -204.579 188.117 -174.35 190.51C-98.1139 196.547 -19.1852 218.909 52.6966 243.229C104.784 260.853 162.671 273.351 216.767 282.834C294.947 296.54 371.69 320.478 445.355 350.114C477.227 362.936 480.409 368.413 509.376 348.106C550.969 318.946 594.926 294.797 638.758 269.32C672.264 249.845 703.024 223.869 739.179 209.291C771.647 196.2 807.148 192.309 840.402 181.588C844.527 180.257 863.355 176.836 866.565 172.376C882.764 149.867 800.488 105.884 791.855 100.336C744.8 70.0935 695.168 46.8088 655.933 5.85955C638.571 -12.2605 627.717 -1.26785 604.729 -1.69066C487.067 -3.85472 380.224 -39.3284 271.046 -80.2363C191.956 -109.87 117.481 -144.857 48.8616 -192.783C37.5696 -200.67 24.9974 -214.543 13.048 -220.472C11.6344 -221.173 10.6527 -218.409 9.3604 -217.503C1.93671 -212.301 -9.14791 -211.341 -17.4883 -208.955C-88.3669 -188.682 -158.012 -162.881 -228.714 -141.618C-247.926 -135.84 -285.281 -137.494 -264.882 -116.147C-158.077 -4.38428 -40.4501 98.8205 68.9285 208.283C149.947 289.364 232.314 362.443 324.462 430.574C392.48 480.865 460.947 530.627 527.84 582.419C570.473 615.428 604.827 654.942 651.215 683.957C721.946 728.2 789.772 775.852 857.773 824.277C860.522 826.235 892.544 844.957 882.871 847.526C826.311 862.547 776.454 893.462 737.794 937.58C717.216 961.063 690.984 1018.72 690.984 1018.72C690.984 1018.72 673.64 984.066 659.16 972.016C600.754 923.41 544.409 875.15 496.506 815.647C458.2 768.065 433.313 719.549 418.268 660.146C412.074 635.689 417.46 627.153 394.777 624.36C308.538 613.742 208.898 584.236 137.414 534.36C94.4394 504.377 57.2217 498.521 59.5762 442.959C65.4924 303.346 200.052 213.338 308.635 152.355C320.496 145.693 398.015 106.395 396.463 90.4609C392.71 51.9165 403.987 8.32628 411.067 -29.1718C411.603 -32.0105 422.72 -78.2027 423.025 -77.5427C427.136 -68.6449 427.64 -56.8295 429.865 -47.3433C434.393 -28.0278 468.35 18.7665 451.66 8.03999C444.276 3.29399 438.869 -11.9309 431.543 -18.4589C426.451 -22.9961 419.73 -25.5689 415.092 -30.5889C406.519 -39.8676 389.62 -39.3881 378.235 -43.1553C367.503 -46.7061 356.771 -57.5702 345.447 -54.4403C325.307 -48.8736 291.689 -22.2536 276.552 -8.85169C243.341 20.5505 216.04 56.9911 184.117 87.8974C139.925 130.683 93.824 171.797 47.6112 212.378C-35.884 285.698 -111.191 360.697 -186.107 442.771C-223.9 484.176 -260.492 521.889 -300.138 561.009C-345.384 605.656 -375.994 660.105 -400.796 718.317C-460.182 857.698 -505.573 1004.89 -546.781 1150.35C-561.795 1203.35 -577.042 1255.73 -594.28 1308.02C-595.848 1312.77 -598.809 1341.98 -602.171 1326.52"
              stroke="black"
              strokeWidth="0.219756"
              strokeLinecap="round"
            />
          </g>
          <defs>
            <clipPath id="clip0_2654_13092">
              <rect width="375" height="812" fill="white" />
            </clipPath>
          </defs>
        </Lines>
      )}
      <Bg img={{ path: 'bg', src: 'mostwanted-done', alt: 'RAW MostWanted Done Bg' }} />
      <WrapTexts>{texts && texts.map(({ id, text }) => <Text key={id} dangerouslySetInnerHTML={{ __html: text }} />)}</WrapTexts>
      <Back href={link.href} passHref>
        {link.name}
      </Back>
    </MostWantedDoneCom>
  );
};

export default MostWantedDone;
